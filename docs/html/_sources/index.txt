.. _particle_electron:

Particle Electron
=================

The Particle Electron is a GSM enabled development platform for creating connected devices with M2M in mind. 
Particle Electron combines a powerful ARM Cortex M3 micro-controller with a 3G/2G gsm module from UBlox (U260 or G350).
Particle Electron uses the `STM32F205RG Cortex M3  microcontroller <https://www.particle.io/products/hardware/electron-cellular-dev-kit>`_.

.. figure:: /custom/img/ParticleElectron.jpg
   :align: center
   :figwidth: 400 
   :alt: Particle Electron Board

   
*Particle Electron. Copyright particle.io*

In addition to having 1Mb of internal flash memory for storing the firmware, the Electron also features 128k of Ram and 120 MHz of clock.

**Note:** all the reported information are extracted from the official `Particle Electron reference page <http://docs.particle.io/electron/>`_, visit this page for more details and updates.


ZERYNTH Pin Mapping and Associated Features 
*********************************************

.. figure:: /custom/img/ParticleElectronPin.png
   :align: center
   :figwidth: 700 
   :alt: Particle Electron Pin Map


Particle Electron Official Schematic, Reference Design & Pin Mapping are available on the `official Particle Electron reference page <http://docs.particle.io/electron/>`_.


Board Summary
**************

* Microcontroller: ARM 32-bit Cortex™-M3 CPU Core
* Operating Voltage: 3.3V
* Input Voltage: 3.6-6V
* Digital I/O Pins (DIO): 28 
* Analog Input Pins (ADC): 14
* Analog Outputs Pins (DAC): 1
* UARTs: 5
* SPIs: 2
* I2Cs: 1
* CANs: 1
* Flash Memory: 1Mb 
* SRAM: 128 KB
* Clock Speed: 120Mhz

Power
*******
The Electron is equipped with on board power management circuit powered by BQ24195 pm unit and MAX17043 fuel gauge. The Electron can be powered via the VIN (3.9V-12VDC) pin, the USB Micro B connector or a LiPo battery. When powered from a LiPo battery alone, the power management IC switches off the internal regulator and supplies power to the system directly from the battery.

Connect, Virtualize and Program
**************************************
On Windows machines the `Particle Electron USB Drivers <https://docs.particle.io/guide/getting-started/connect/electron/#installing-the-particle-driver>`_ are required by the ZERYNTH IDE for accessing the  serial port establishing a connection with the STM32 UART.

To install the drivers on Windows plug the Electron on an USB port, unzip the downloaded package, go to the Windows Devices Manager and double-click on the Particle device under “Other Devices”. Click Update Driver, and select Browse for driver software on your computer. Navigate to the folder where the package has been unzipped and select it (Note that right now, the drivers are in a Spark folder and are named photon.cat).

It could be necessary to temporarily disable the digitally signed driver enforcement policy of Windows to allow Electron driver installation. There are good instructions on how to do that in `this guide <http://www.howtogeek.com/167723/how-to-disable-driver-signature-verification-on-64-bit-windows-8.1-so-that-you-can-install-unsigned-drivers/>`_.

On MAC OS X and Linux USB drivers are not required.

In Linux however the following udev rules may need to be added: ::

    #Particle Electron
    SUBSYSTEMS=="usb", ATTRS{idVendor}=="2b04", ATTRS{idProduct}=="d00a", MODE="0666", GROUP="users", ENV{ID_MM_DEVICE_IGNORE}="1"
    SUBSYSTEMS=="tty", ATTRS{idVendor}=="2b04", ATTRS{idProduct}=="d00a", MODE="0666", GROUP="users", ENV{ID_MM_DEVICE_IGNORE}="1"
    SUBSYSTEMS=="usb", ATTRS{idVendor}=="2b04", ATTRS{idProduct}=="c00a", MODE="0666", GROUP="users", ENV{ID_MM_DEVICE_IGNORE}="1"
    SUBSYSTEMS=="tty", ATTRS{idVendor}=="2b04", ATTRS{idProduct}=="c00a", MODE="0666", GROUP="users", ENV{ID_MM_DEVICE_IGNORE}="1"


Once connected on a USB port, if drivers have been correctly installed, the Electron can be seen as Virtual Serial port and it is automatically recognized by the ZERYNTH IDE and listed in the **Boards Management Toolbar** as *Particle Electron virtualizable* if never virtualized before, or as *Particle Electron virtualized* if already flashed with a ZERYNTH Virtual Machine. 

To virtualize an Electron or to update the ZERYNTH VM installed on it, it is necessary to put the Electron in DFU Mode (Device Firmware Upgrade) as reported in the official `Particle Electron Guide <http://docs.particle.io/electron>`_ . 
**Note:** On Windows machines it is necessary to install also the Electron DFU drivers for virtualizing the board. The official Particle Core DFU driver and the related installation procedure are reported `here <https://community.particle.io/t/tutorial-installing-dfu-driver-on-windows-24-feb-2015/3518>`_ but they also work for the Electron.

Follow these steps to virtualize a Particle Electron:

* Ensure that your Particle Electron has been connected at least once to the Particle Cloud and has downloaded the latest firmware
* Hold down BOTH buttons
* Release only the RST button, while holding down the SETUP button
* Wait for the LED to start flashing magenta, then yellow
* Release the SETUP button
* The Electron is now in DFU Mode (yellow blinking led)
* Select the Electron on the Board Management Toolbar and click virtualize
* **The Electron is now virtualized, check it on the Board Management Toolbar**

Follow these steps to upload a ZERYNTH script on a virtualized Electron:

* Select the virtualized Electron on the Board Bar List
* Click upload
* Reset the Electron by pressing the RST button when asked
* **The script is now running on the Electron** 




